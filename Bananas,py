import pygame

pygame.image.load("monke\\walk\\Monke Walk 1.png")

def center_frames(frames, mode='bottom'):
    frame_dimens = [f.get_size() for f in frames]
    x_max, y_max = max(frame_dimens, key=lambda x: x[0])[0], max(frame_dimens, key=lambda x: x[1])[1]
    print(x_max, y_max)
    centered_frames = []
    
    if mode == 'bottom':
        for frame in frames:
            surf = pygame.Surface((x_max, y_max), pygame.SRCALPHA)
            rect = surf.get_rect()
            rect.midbottom = x_max//2, y_max
            surf.blit(frame, rect)
            centered_frames.append(surf)
    
    return centered_frames

class Goril:
    walk_right = center_frames([pygame.image.load(f"monke\\walk\\Monke Walk {i}.png") for i in range(1, 9)])
    walk_left = [pygame.transform.flip(frame, 1, 0) for frame in walk_right]
    walk_anim_time = 125

    def __init__(self):
        self.t = 0
        self.vel_x, self.vel_y = 0, 0
        self.switch_anim(self.walk_right)
        self.anim_time = self.walk_anim_time
        self.switch_frame_at = self.t + self.anim_time
        
        self.sprite = self.walk_right[self.anim_index]
        
        self.gravity = 0.005
        self.facing = 'right'
        self.moving = False
    
    def switch_anim(self, frames):
        self.anim_index = 0
        self.frames = frames
        self.rect = self.frames[0].get_rect()
        
    def update(self, dt, floor = 800):
        # Gravity:
        self.t += dt
        self.vel_y = self.vel_y+self.gravity*dt if self.rect.bottom < floor else 0
        self.rect.bottom = min(floor, self.rect.bottom+self.vel_y*dt)
        self.animate()

    def draw(self, screen):
        screen.blit(self.sprite, self.rect)
    
    # def animate(self):
    #     if self.t > self.switch_frame_at:
    #         self.switch_frame_at += self.anim_time
    #         self.anim_index = (self.anim_index + 1) % len(self.frames)
    #         self.sprite = self.frames[self.anim_index]
    
    def move(self, screen):
        if self.moving:
            self.animate()


if __name__ == '__main__':
    FPS = 60
    screen = pygame.display.set_mode((1000, 850))
    clock = pygame.time.Clock()
    
    goril = Goril()
    run = True
    while run:
        dt = clock.tick(FPS)
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False

        screen.fill((30, 30, 30))
        goril.update(dt if dt != 0 else 1/FPS)
        goril.draw(screen)
        
        
        pygame.display.update()

    
    pygame.quit()